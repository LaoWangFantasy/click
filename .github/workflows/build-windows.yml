name: build-windows

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PUBSPEC: "pubspec.yaml"
  TARGET: "windows"
  RELEASE: "build/windows/x64/runner/Release"

permissions:
  contents: write

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["ci"]
    types:
      - completed
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/build-windows.yml"

jobs:
  pre:
    runs-on: ubuntu-24.04
    outputs:
      pubspec: ${{ env.PUBSPEC }}
      target: ${{ env.TARGET }}
      release: ${{ env.RELEASE }}
    steps:
      - run: echo "Bypass GitHub Action Restriction"

  pkcs12:
    needs:
      - pre
    uses: LaoWangFantasy/Flutter-Actions/.github/workflows/create-pfx.yml@master
    secrets: inherit
    # with:
    #   pkcs12-secret: ${{ needs.pre.outputs.pfx }}

  ready:
    needs:
      - pre
    uses: LaoWangFantasy/Flutter-Actions/.github/workflows/get-version.yml@master
    with:
      pub_path: ${{ needs.pre.outputs.pubspec }}

  build-windows:
    runs-on: windows-2019
    needs:
      - pre
      - ready
      - pkcs12
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Flutter
        uses: subosito/flutter-action@v2.18.0
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
      -
        run: choco install yq
      -
        run: flutter --version
      -
        run: flutter pub get
      -
        run: flutter test
      -
        run: flutter build windows --release
      -
        run: |
          REPO_NAME="${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}"
          ls $RELEASE/$REPO_NAME.exe
          echo "${{ needs.pkcs12.outputs.pfx-base64 }}" | base64 -d > signingCert.pfx
          cat signingCert.pfx
          "C:\Program Files (x86)\Microsoft SDKs\ClickOnce\SignTool\signtool.exe" sign /a /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 /f signingCert.pfx /p "${{ secrets.WINDOWS_PFX_PASSWD }}" $RELEASE/$REPO_NAME.exe
        shell: bash
      -
        run: |
          $repoName = $Env:GITHUB_REPOSITORY -replace '^.+/', ''
          $prefix = "${{ needs.pre.outputs.release }}"
          $bin = "$repoName-${{ needs.ready.outputs.version }}-${{ needs.pre.outputs.target }}.zip"

          cd (Split-Path -Path $prefix -Parent)
          Move-Item -Path "Release" -Destination "$repoName"
          Compress-Archive -Path "$repoName" -DestinationPath $bin -CompressionLevel Optimal
          gh release upload ${{ needs.ready.outputs.version }} $bin --clobber
        shell: pwsh
        name: Upload(windows zip)
      # -
      #   run: |
      #     flutter pub add --dev msix
      #     # echo "${{ secrets.WINDOWS_PFX_BASE64 }}" | base64 -d > signingCert.pfx
      #     # echo y | dart run msix:create -c "signingCert.pfx" -p ${{ secrets.WINDOWS_PFX_PASSWD }}
      #     echo y | dart run msix:create -b "CN=LaoWangFantasy Software, O=LaoWangFantasy Inc, C=US"
      #   shell: bash
      # -
      #   run: |
      #     REPO_NAME="${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}"
      #     PREFIX="${{ needs.pre.outputs.release }}/$REPO_NAME.msix"
      #     EXTENSION="${PREFIX##*.}"
      #     BIN="$REPO_NAME-${{ needs.ready.outputs.version }}-${{ needs.pre.outputs.target }}.$EXTENSION"

      #     mv $PREFIX $BIN
      #     gh release upload ${{ needs.ready.outputs.version }} $BIN --clobber
      #   shell: bash
      #   name: Upload(windows msix)
